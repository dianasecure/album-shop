generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Album {
  id        Int      @id @default(autoincrement())
  title     String
  artist    String
  genre     String
  year      Int
  price     Float
  format    String
  image     Image[]
  songs     Song[]

  @@index([year])
  @@index([genre])
}

model Song {
  id       Int    @id @default(autoincrement())
  name     String
  duration String
  albumId  Int
  album    Album  @relation(fields: [albumId], references: [id])

  @@index([albumId])
}

model Image {
  id       Int    @id @default(autoincrement())
  url      String
  album    Album  @relation(fields: [albumId], references: [id])
  albumId  Int

  @@index([albumId])
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String   // hashed
  role      String   // 'user' or 'admin'
  logs      Log[]
  shoppingList ShoppingListItem[]
  monitoredUser MonitoredUser?
}

model Log {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  action    String   // 'CREATE', 'UPDATE', 'DELETE', 'READ'
  entity    String   // e.g. 'Album', 'ShoppingListItem'
  timestamp DateTime @default(now())
}

model ShoppingListItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  albumId   Int
  quantity  Int
}

model MonitoredUser {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  reason    String
  detectedAt DateTime @default(now())
}

